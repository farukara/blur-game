import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import React, {useState, useEffect, useRef} from 'react'

export default function Home() {
    const [binoPos, setbinoPos] = useState({})
    const [binoSize, setBinoSize] = useState(10)
    const [clarity, setClarity] = useState(30)
    const blurRef = useRef()

    const mousemove = (e) => {
        setbinoPos({x: e.clientX/e.target.offsetHeight, y:e.clientY/e.target.offsetWidth})
     };
    useEffect (() => {
        blurRef.current.style.transform = `translate(${binoPos.x*10}%, ${binoPos.y*10}%)`
    }, [binoPos])

    useEffect(() => {
        const interval = setInterval (() => {
            if (clarity > 5) {
                setClarity( p => p-0.1) 
                setBinoSize ( p => p +0.1)
            } else {
                clearInterval(interval)
            }
        }, 1000)
        return () => clearInterval(interval)
    }, []);

    useEffect (() => {
        blurRef.current.style.backdropFilter = `blur(${Math.floor(clarity)}px)`
        blurRef.current.style.webkitBackdropFilter = `blur(${Math.floor(clarity)}px)`
        console.log("clarity:", clarity)
    }, [clarity])

    useEffect (() => {
        blurRef.current.style.maskImage = `radial-gradient(${Math.floor(binoSize)}px at 50% 50%, transparent 50%, black 50%)`
        blurRef.current.style.webkitMaskImage = `radial-gradient(${Math.floor.binoSize}px at 50% 50%, transparent 50%, black 50%)`
        console.log("binoSize:", binoSize)
    }, [binoSize])

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href="https://nextjs.org">Next.js!</a>
        </h1>

        <Image className={styles.canvas}  src="/1.jpg" alt="1st image" layout="fill"/>

        <div className={styles.blur} ref={blurRef} onMouseMove={mousemove}>
        </div>

      </main>
    </div>
  )
}
